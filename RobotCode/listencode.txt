MODULE Listen
    VAR socketdev sockDev;
    PERS bool getCoord;
    PERS bool Ready;
    PERS num XPos;
    PERS num YPos;
    PERS num Angle;
    
    PROC Main()
        CreateSocket;
        WHILE (TRUE) DO
           IF getCoord THEN
            SendData;
            ReceiceData;
            getCoord := FALSE;
            TPWrite("false again");
           ENDIF
        ENDWHILE
    ENDPROC
    
    PROC CreateSocket()
        TPWrite "Trying to connect.....SPANNEND";
        SocketCreate sockDev;
        SocketConnect sockDev , "192.168.125.4",8004;   
        TPWrite "Connected";
    ENDPROC
    
    PROC ReceiceData()
        !TPWrite("Receiving");
        VAR string StrReceived:= "";
        VAR string xdata;
        VAR string ydata;
        VAR string angleData;
        VAR bool bOK;
        VAR num Delimiter1;
        VAR num Delimiter2;
        VAR bool CanChange := TRUE;
        
        SocketReceive sockDev\Str:=StrReceived \Time:= 300;
        TPWrite "real data:";
        TPWrite StrReceived;
         
        Delimiter1 := StrFind(StrReceived,1,"@");
        Delimiter2 := StrFind(StrReceived,1,"$");
        xdata := StrPart(StrReceived,1,Delimiter1-1);
        !TPWrite xdata;
        ydata := StrPart(StrReceived,Delimiter1+1,(Delimiter2 - Delimiter1) -1);
        !TPWrite ydata;
        angleData := StrPart(StrReceived, Delimiter2+1, StrLen(StrReceived) - Delimiter2);
        !TPWrite angleData;
        
        bOK := StrToVal(xdata,XPos);
        bOK := StrToVal(ydata,YPos);
        bOk := StrToVal(angleData, Angle);
        IF  XPos < 0 AND CanChange THEN
            CanChange := FALSE;
        ELSEIF XPos < 200 AND CanChange THEN
            XPos := XPos - 30;
            CanChange := FALSE;
        ELSEIF XPos < 400 AND CanChange THEN
            XPos := XPos - 75;
            CanChange := FALSE;
        ELSE
            XPos := XPos - 145;
        ENDIF
        Ready := TRUE;
        
        
    ENDPROC
    
     PROC SendData()
        !TPWrite("Sending");
       VAR string message:= "ready";
       SocketSend sockDev\Str:= message;
       TPWrite "Send message";
    ENDPROC
    
ENDMODULE